<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI-Powered "People Also Ask" Finder</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; background-color: #f8fafc; }
        .cluster-card {
            background-color: white;
            border-radius: 0.75rem;
            box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            transition: transform 0.2s;
        }
        .cluster-card:hover {
            transform: translateY(-5px);
        }
    </style>
</head>
<body class="antialiased text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 lg:p-8">
        <header class="text-center mb-10">
            <h1 class="text-3xl md:text-4xl font-bold text-gray-900">AI-Powered "People Also Ask" Finder</h1>
            <p class="mt-2 text-lg text-gray-600">Turn any keyword into a complete content strategy.</p>
        </header>

        <main>
            <div class="max-w-2xl mx-auto bg-white p-6 rounded-lg shadow-md mb-8">
                <div class="mb-4">
                    <label for="keyword-input" class="block text-sm font-medium text-gray-700">Enter Your Focus Keyword:</label>
                    <input type="text" id="keyword-input" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm" placeholder="e.g., digital marketing">
                </div>
                 <div class="mb-4">
                    <label for="country-select" class="block text-sm font-medium text-gray-700">Select Country:</label>
                    <select id="country-select" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500 sm:text-sm">
                        <option value="us">United States</option>
                        <option value="pk">Pakistan</option>
                        <option value="in">India</option>
                        <option value="de">Germany</option>
                        <option value="fr">France</option>
                        <option value="gb">United Kingdom</option>
                    </select>
                </div>
                <button id="find-btn" class="w-full bg-blue-600 text-white font-semibold py-3 px-4 rounded-lg hover:bg-blue-700 transition-colors duration-300 flex items-center justify-center disabled:bg-gray-400">
                    <span id="btn-text">Find Questions & Create Clusters</span>
                    <div id="spinner" class="hidden w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin ml-2"></div>
                </button>
                <div id="error-message" class="hidden mt-4 p-3 bg-red-100 text-red-700 border border-red-200 rounded-md"></div>
            </div>

            <div id="results-container" class="hidden">
                <div id="clusters-container" class="mb-12">
                    <h2 class="text-2xl font-bold text-center mb-6">AI-Clustered Questions</h2>
                    <div id="clusters-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"></div>
                </div>
            </div>
        </main>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', () => {
        const findBtn = document.getElementById('find-btn');
        const btnText = document.getElementById('btn-text');
        const spinner = document.getElementById('spinner');
        const keywordInput = document.getElementById('keyword-input');
        const countrySelect = document.getElementById('country-select');
        const errorMessage = document.getElementById('error-message');
        const resultsContainer = document.getElementById('results-container');
        const clustersGrid = document.getElementById('clusters-grid');
        
        const BACKEND_URL = '/.netlify/functions/process-keyword';

        findBtn.addEventListener('click', async () => {
            const keyword = keywordInput.value.trim();
            const country = countrySelect.value;

            if (!keyword) {
                errorMessage.textContent = 'Please enter a keyword.';
                errorMessage.classList.remove('hidden');
                return;
            }

            resultsContainer.classList.add('hidden');
            clustersGrid.innerHTML = '';
            errorMessage.classList.add('hidden');
            
            btnText.textContent = 'Finding & Clustering...';
            spinner.classList.remove('hidden');
            findBtn.disabled = true;

            try {
                const response = await fetch(BACKEND_URL, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ keyword, country })
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'An unknown API error occurred.');
                }
                
                const data = await response.json();
                const clusters = data.clusters;
                const clusterKeys = Object.keys(clusters);

                if (clusterKeys.length === 0) {
                    errorMessage.textContent = `No questions found for "${keyword}". Please try a different term.`;
                    errorMessage.classList.remove('hidden');
                    return;
                }

                resultsContainer.classList.remove('hidden');
                clusterKeys.forEach(title => {
                    const questions = clusters[title];
                    const card = document.createElement('div');
                    card.className = 'cluster-card p-4';
                    let questionList = questions.map(q => `<li class="text-sm">${q}</li>`).join('');
                    card.innerHTML = `<h3 class="font-semibold mb-2">${title}</h3><ul class="list-disc list-inside space-y-1 text-gray-600">${questionList}</ul>`;
                    clustersGrid.appendChild(card);
                });

            } catch (err) {
                errorMessage.textContent = `An error occurred: ${err.message}`;
                errorMessage.classList.remove('hidden');
                console.error(err);
            } finally {
                spinner.classList.add('hidden');
                btnText.textContent = 'Find Questions & Create Clusters';
                findBtn.disabled = false;
            }
        });
    });
    </script>
</body>
</html>